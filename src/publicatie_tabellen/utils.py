import pandas as pd
from django.db.models.query import QuerySet


def round_to_base(x, base=5):
    """ round up / down to base """
    return base * round(x/base)


def convert_queryset_into_dataframe(queryset: QuerySet) -> pd.DataFrame:
    """ converts a queryset into a dataframe """
    return pd.DataFrame(list(queryset.values()), columns=queryset._fields)


def copy_queryset(queryset: QuerySet, copy_to_model):
    """ copy queryset into the copy_to_model """
    new_item_list = []

    for item_obj in queryset:
        new_item_list.append(item_obj)

    copy_to_model.objects.bulk_create(new_item_list) 


def copy_dataframe(dataframe: pd.DataFrame, copy_to_model):
    """ copy dataframe into the copy_to_model 
        df.columns must be equal to copy_to_model._fields"""    
    fields = [ i.name for i in copy_to_model._meta.get_fields()]
    fields.remove('id') # autogenerated by model

    new_item_list = []
    
    for _, row in dataframe.iterrows():
        params = {}
        for f in fields:
            params[f] = row[f]
        new_item_list.append( copy_to_model(**params))

    copy_to_model.objects.bulk_create(new_item_list)    
