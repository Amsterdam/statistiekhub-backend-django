x-app: &base-app
  build:
    context: .  
  depends_on:
    database:
      condition: service_healthy
    azurite:
      condition: service_healthy
  volumes:
    - .:/app
  environment: &base-app-env
    SECRET_KEY: "insecure"
    AUTHORIZATION_TOKEN: "auth-token"
    GET_AUTHORIZATION_TOKEN: "get-auth-token"
    AZURITE_QUEUE_CONNECTION_STRING: 'DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;QueueEndpoint=http://azurite:10001/devstoreaccount1;'
    OIDC_BASE_URL: "https://login.microsoftonline.com/72fca1b1-2c2e-4376-a445-294d80196804"
    OIDC_RP_CLIENT_ID: 
    OIDC_RP_CLIENT_SECRET:
    OIDC_RP_SCOPES:
    OIDC_OP_ISSUER:
    OIDC_VERIFY_AUDIENCE: true
    OIDC_TRUSTED_AUDIENCES:

services:
  database:
    image: postgis/postgis:15-3.4
    ports:
      - "5432"
    environment:
      POSTGRES_DB: statistiek_hub
      POSTGRES_USER: statistiek_hub
      POSTGRES_PASSWORD: insecure
    #command: postgres -c datestyle='iso, dmy'
    healthcheck:
      test: pg_isready -U statistiek_hub -d statistiek_hub
      interval: 10s
      timeout: 1s
      retries: 5
  
  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    ports:
      - "10000:10000"  # Blob service
      - "10001:10001"  # Queue service
    healthcheck:
      test: nc 127.0.0.1 10000 -z
      interval: 1s
      retries: 30

  app:
    <<: *base-app
    image:  ${REGISTRY:-127.0.0.1:5001}/${REPOSITORY:-opdrachten/statistiekhub}:${VERSION:-latest}
    build:
      context: .
      target: app 
    environment:
      DEBUG: false
      DJANGO_SETTINGS_MODULE: main.settings
    command: /app/deploy/docker-run.sh

  dev:
    <<: *base-app
    build:
      context: .
      target: dev
    environment:
      <<: *base-app-env
      LOG_LEVEL: "INFO"
      DEBUG: "True"
      DJANGO_LOG_LEVEL: "DEBUG"
      DJANGO_SUPERUSER_PASSWORD: "admin"
      DJANGO_SUPERUSER_USERNAME: "admin"
      DJANGO_SUPERUSER_EMAIL: "admin@amsterdam.nl"
    command: python manage.py runserver 0.0.0.0:8000

  test:
    <<: *base-app
    build:
      context: .
      target: tests
    environment:
      <<: *base-app-env
      DJANGO_SETTINGS_MODULE: "main.settings"
      OIDC_RP_CLIENT_ID: tests
      OIDC_RP_CLIENT_SECRET: tests

  linting:
    build:
      context: .
      target: linting
    volumes:
      - ./src:/app/src
      - ./tests:/app/tests
