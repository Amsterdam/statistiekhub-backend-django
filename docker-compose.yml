version: "3.5"

x-app: &base-app
  build:
    context: .  
  depends_on:
    - database
    - azurite
  volumes:
    - ./src:/src
    - ./tests:/tests
    - ./deploy:/deploy
  environment: &base-app-env
    DEBUG: "True"
    SECRET_KEY: "insecure"
    AUTHORIZATION_TOKEN: "auth-token"
    GET_AUTHORIZATION_TOKEN: "get-auth-token"
    AZURITE_QUEUE_CONNECTION_STRING: 'DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;QueueEndpoint=http://azurite:10001/devstoreaccount1;'

  env_file: &envfile
      - .dev.env   
  entrypoint: /deploy/wait-for-it.sh database:5432 --

services:
  database:
    image: postgis/postgis:15-3.4
    ports:
      - "5432"
    environment:
      POSTGRES_DB: statistiek_hub
      POSTGRES_USER: statistiek_hub
      POSTGRES_PASSWORD: insecure
    #command: postgres -c datestyle='iso, dmy'
  
  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    ports:
      - "10000:10000"  # Blob service
      - "10001:10001"  # Queue service

  app:
    <<: *base-app
    build:
      target: app 
    env_file: *envfile
    environment:
      DEBUG: false
      DJANGO_SETTINGS_MODULE: main.settings
    image:  ${REGISTRY:-127.0.0.1:5001}/${REPOSITORY:-statistiek_hub}:${VERSION:-latest}
    command: python manage.py runserver 0.0.0.0:8000 #/deploy/docker-run.sh

  dev:
    <<: *base-app
    build:
      target: dev
    environment:
      <<: *base-app-env
      DJANGO_SUPERUSER_PASSWORD: "admin"
      DJANGO_SUPERUSER_USERNAME: "admin"
      DJANGO_SUPERUSER_EMAIL: "admin@amsterdam.nl"
      DEBUG: "True"
    image:  ${REGISTRY:-127.0.0.1:5001}/${REPOSITORY:-statistiek_hub}-dev:${VERSION:-latest}
    command:  python manage.py runserver 0.0.0.0:8000 #/deploy/docker-run.sh

  test:
    <<: *base-app
    build:
      target: tests
    environment:
      <<: *base-app-env
      DJANGO_SETTINGS_MODULE: "main.settings"
      DEBUG: "True"

